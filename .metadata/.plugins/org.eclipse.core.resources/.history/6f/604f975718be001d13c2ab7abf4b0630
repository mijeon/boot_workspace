package com.edu.boot0307.controller;

import java.util.ArrayList;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.servlet.ModelAndView;

import com.edu.boot0307.domain.Board;
import com.edu.boot0307.model.BoardService;

//스프링 부트는 기존의 Legacy의 API를 그대로 가져오되, 단지 설정에 대한 부담만 개발자에게 안준것임
//따라서 @Controller, @Service... 
@Controller
public class BoardController {
	private Logger logger=LoggerFactory.getLogger(this.getClass());
	
	@Autowired
	private BoardService boardService;
	
	@GetMapping("/board/list")
	public ModelAndView getList() {
		logger.info("리스트 하위 컨트롤러 작동함");
		
		//데이터 가공하기
		List boardList=new ArrayList();
		for(int i=0;i<109;i++) {
			Board board=new Board();
			board.setTitle(i+" 번째 제목");
			board.setWriter("지노 "+i);
			board.setRegdate("2023-03-09");
			board.setHit(i);
		}
		
		ModelAndView mav=new ModelAndView("board/list");
		
		return mav;
	}
	
	//글 등록 요청처리
	@PostMapping("/board/regist")
	public ModelAndView regist(Board board) {
		logger.info("글 쓰기 요청 받음"+board.getTitle());
		
		//3단계) 일시키기
		boardService.insert(board);
		
		ModelAndView mav=new ModelAndView("redirect:/board/list");
		
		return mav;
	}
	
	//글쓰기 폼 요청처리
	@GetMapping("/board/registform")
	public ModelAndView getForm() {
		
		
		return new ModelAndView("board/write");
	}
}
